http://162.55.220.72:5005/user_info_2
// 1.Вставить параметр salary из окружения в request
pm.environment.get("salary");

// 2.Вставить параметр age из окружения в age
pm.environment.get("age");

// 3.Вставить параметр name из окружения в name
pm.environment.get("name");

// 4.Отправить запрос.
// 5.Статус код 200
pm.test("Check status code is 200", function () {
    pm.response.to.have.status(200);
});

// 6.Спарсить response body в json.
let jsonData = pm.response.json();

// 7.Спарсить request.
let req = request.data;

// 8.Проверить, что json response имеет параметр start_qa_salary
pm.test("Check param start_qa_salary", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("start_qa_salary");
});

// 9.Проверить, что json response имеет параметр qa_salary_after_6_months
pm.test("Check param qa_salary_after_6_months", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_6_months");
});

// 10.Проверить, что json response имеет параметр qa_salary_after_12_months
pm.test("Check param qa_salary_after_12_months", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_12_months");
});

// 11.Проверить, что json response имеет параметр qa_salary_after_1.5_year
pm.test("Check param qa_salary_after_1.5_year", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_1.5_year");
});

// 12.Проверить, что json response имеет параметр qa_salary_after_3.5_years
pm.test("Check param qa_salary_after_3.5_years", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_3.5_years");
});

// 13.Проверить, что json response имеет параметр person
pm.test("Check param person", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("person");
});

// 14.Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
pm.test("start_qa_salary is equal to salary in request", function () {
    let jsonData = pm.response.json();
    let resp_start_qa_salary = jsonData.start_qa_salary;
    let req_salary = req.salary;
    pm.expect(Number(resp_start_qa_salary)).to.eql(Number(req_salary));
});

// 15.Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
pm.test("qa_salary_after_6_months is equal to salary*2 in request", function () {
    let jsonData = pm.response.json();
    let resp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;
    let req_salary = req.salary*2;
    pm.expect(Number(resp_qa_salary_after_6_months)).to.eql(Number(req_salary));
});

// 16.Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
pm.test("qa_salary_after_12_months is equal to salary*2.7 in request", function () {
    let jsonData = pm.response.json();
    let resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;
    let req_salary = req.salary*2.7;
    pm.expect(Number(resp_qa_salary_after_12_months)).to.eql(Number(req_salary));
});

// 17.Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
pm.test("qa_salary_after_1.5_year is equal to salary*3.3 in request", function () {
    let jsonData = pm.response.json();
    let resp_qa_salary_after_1_5_year = jsonData["qa_salary_after_1.5_year"];
    let req_salary = req.salary*3.3;
    pm.expect(Number(resp_qa_salary_after_1_5_year)).to.eql(Number(req_salary));
});

// 18.Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
pm.test("qa_salary_after_3.5_years is equal to salary*3.8 in request", function () {
    let jsonData = pm.response.json();
    let resp_qa_salary_after_3_5_years = jsonData["qa_salary_after_3.5_years"];
    let req_salary = req.salary*3.8;
    pm.expect(Number(resp_qa_salary_after_3_5_years)).to.eql(Number(req_salary));
});

// 19.Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
pm.test("Check u_name", function () {
    let jsonData = pm.response.json();
    let resp_u_name = jsonData.person.u_name[1];
    let req_salary = req.salary;
    pm.expect(Number(resp_u_name)).to.eql(Number(req_salary));
});

// 20.Проверить, что что параметр u_age равен age из request (age забрать из request.)
pm.test("Check u_age", function () {
    let jsonData = pm.response.json();
    let resp_u_age = jsonData.person.u_age;
    let req_age = req.age;
    pm.expect(Number(resp_u_age)).to.eql(Number(req_age));
});

// 21.Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
pm.test("Check u_salary_5_years is equal to salary*4.2 in request", function () {
    let jsonData = pm.response.json();
    let resp_u_salary_5_years = jsonData.person.u_salary_5_years;
    let req_salary = req.salary*4.2;
    pm.expect(Number(resp_u_salary_5_years)).to.eql(Number(req_salary));
});

//22.***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.
for (let i in jsonData.person) {
    console.log(jsonData.person[i]);
};
